class Solution {
    public String predictPartyVictory(String senate) {
        int nums = senate.length();
        char[] cArr = senate.toCharArray();
        int mark = 0;   //循环一次是否有改变的标志位
        HashMap<Character, String> res = new HashMap<Character, String>();
        res.put('R', "Radiant");
        res.put('D', "Dire");
        while(true){
            for(int i = 0; i < nums; i++) {
                if(cArr[i] == 'A')
                    continue;
                mark = 0;
                for(int j = (i + 1) % nums; j != i; j = (j + 1) % nums) {
                    if(cArr[i] == 'R'  && cArr[j] == 'D') {
                        cArr[j] = 'A';
                        mark = 1;
                        break; 
                    }
                    if(cArr[i] == 'D'  && cArr[j] == 'R') {
                        cArr[j] = 'A';
                        mark = 1;
                        break; 
                    }
                }
                if(mark == 0)
                    return res.get(cArr[i]);
            }
        }
    }
}

//string的charAt方法返回的是char类型
//如果想要改变String类型，应该先使用toCharArray()方法将其转换为char数组
